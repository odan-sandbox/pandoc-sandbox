version: 2
jobs:
    build:
        working_directory: ~/work
        machine: true
        steps:
            - checkout
            - run:
                name: Install Docker Compose
                command: |
                    set -x
                    curl -L https://github.com/docker/compose/releases/download/1.11.2/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose
                    chmod +x /usr/local/bin/docker-compose
            - restore_cache:
                key: docker-{{ checksum "Dockerfile.base" }}
                path: ~/cache/base-image.tar
            - restore_cache:
                key: docker-{{ checksum "Dockerfile.pandoc" }}
                path: ~/cache/pandoc-image.tar
            - restore_cache:
                key: docker-{{ checksum "Dockerfile.texlive" }}
                path: ~/cache/texlive-image.tar

            - run:
                name: load docker cache
                command: |
                    if test -d ~/cache; then
                        docker load -i ~/cache/base-image.tar;
                        docker load -i ~/cache/pandoc-image.tar;
                        docker load -i ~/cache/texlive-image.tar;
                    fi
            - run: make docker
            - run:
                name: save docker cache
                command: |
                    mkdir -p ~/cache
                    docker -save -o ~/cache/base-image.tar odanado/book:base
                    docker -save -o ~/cache/pandoc-image.tar odanado/book:pandoc
                    docker -save -o ~/cache/texlive-image.tar odanado/book:texlive

            - save_cache:
                key: docker-{{ checksum "Dockerfile.base" }}
                paths: ~/cache
            - save_cache:
                key: docker-{{ checksum "Dockerfile.pandoc" }}
                paths: ~/cache
            - save_cache:
                key: docker-{{ checksum "Dockerfile.texlive" }}
                paths: ~/cache

    
    build-book:
        working_directory: ~/work
        machine: true
        steps:
            - checkout
            - restore_cache:
                key: docker-{{ checksum "Dockerfile.pandoc" }}
                path: ~/cache
            - restore_cache:
                key: docker-{{ checksum "Dockerfile.texlive" }}
                path: ~/cache

            - run:
                name: load docker cache
                command: |
                    docker load -i ~/cache/pandoc-image.tar
                    docker load -i ~/cache/texlive-image.tar
            
            - run: make pdf
            - run: make html

            - store_artifacts:
                path: ~/work/main.pdf

            - save_cache:
                key: build
                paths: ~/work/build

    deploy-gh-pages:
        working_directory: ~/work/build
        machine: true
        steps:
            - restore_cache:
                key: build
            - run: git init .
            - run: git config --global user.name "circle ci"
            - run: git config --global user.email "odan3240@gmail.com"
            - run: git checkout -b gh-pages
            - run: git add *.html
            - run: git commit -m 'Update [ci skip]'
            - run: git push -f git@github.com:odanado/pandoc-sandbox.git gh-pages


workflows:
    version: 2
    flow:
        jobs:
            - build
            - build-book:
                requires:
                    - build 
            - deploy-gh-pages:
                requires:
                    - build-book
                filters:
                    branches:
                        only: master
